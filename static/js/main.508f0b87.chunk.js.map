{"version":3,"sources":["service/DataService.js","data-table-kelly.js","reportWebVitals.js","index.js"],"names":["DataService","fetch","then","res","json","d","data","DTK","emptyStock","id","code","confidence","ratio","win","loss","asset_allocation","roi","asset_money","useState","stocks","setStocks","inputMoney","setInputMoney","stockDialog","setStockDialog","deleteStockDialog","setDeleteStockDialog","deleteStocksDialog","setDeleteStocksDialog","stock","setStock","selectedStocks","setSelectedStocks","submitted","setSubmitted","globalFilter","setGlobalFilter","toast","useRef","dt","stockService","useEffect","getStocks","formatPercent","value","toLocaleString","style","formatPercentWith2Fixed","minimumFractionDigits","openNew","saveStock","current","show","severity","summary","detail","life","hideDialog","hideDeleteStockDialog","hideDeleteStocksDialog","console","log","trim","_stocks","_stock","index","findIndexById","createId","image","push","i","length","chars","charAt","Math","floor","random","exportCSV","confirmDeleteSelected","kellyFormula","obj","assetAllocationFormula","aa_this","aa_list","reduce","a","b","roiFormula","aa","c","updateDataObject","new_ratio","new_confidence","stocks_length","new_ratio_list","map","asset_allocation_value","updateAllStock","stocks_obj","updated_index","current_ration","current_confidence","onInputNumberChange","e","name","val","header","className","placeholder","min","onValueChange","mode","currency","locale","required","classNames","type","onInput","target","stockDialogFooter","Fragment","label","icon","onClick","deleteStockDialogFooter","filter","deleteStocksDialogFooter","includes","ref","left","disabled","right","selection","onSelectionChange","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","responsiveLayout","selectionMode","headerStyle","width","exportable","field","sortable","hidden","body","rowData","editStock","confirmDeleteStock","visible","modal","footer","onHide","htmlFor","onChange","onInputChange","autoFocus","options","optionLabel","optionValue","max","integeronly","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CssBaseline","Container","maxWidth","document","getElementById"],"mappings":"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","file":"static/js/main.508f0b87.chunk.js","sourcesContent":["// Method which actually read json using XMLHttpRequest and promise\r\n// const jsonFileReader = async path => {\r\n//     return new Promise((resolve, reject) => {\r\n//\r\n//         const request = new XMLHttpRequest();\r\n//         request.open('GET', path, true);\r\n//         request.responseType = 'blob';\r\n//\r\n//         request.onload = () => {\r\n//             const reader = new FileReader();\r\n//\r\n//             reader.onload = e => resolve(e.target.result);\r\n//             reader.onerror = err => reject(err);\r\n//             reader.readAsDataURL(request.response);\r\n//         };\r\n//\r\n//         request.send();\r\n//     });\r\n// }\r\n//\r\n// // This mthod will return the JSON\r\n// const returnJsonData = async (url) => {\r\n//     const jsonData = await jsonFileReader(url);\r\n//     console.log('Here is your JSON data: => ', jsonData);\r\n//     return jsonData;\r\n// }\r\n\r\n\r\nexport class DataService {\r\n\r\n    getStocks() {\r\n        // return fetch('./data/products.json').then(res => res.json()).then(d => d.data);\r\n        return fetch('data/stock.json').then(res => res.json()).then(d => d.data);\r\n\r\n        // Calling the function where you put URL\r\n        // returnJsonData('data/stock.json');\r\n    }\r\n\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport {classNames} from 'primereact/utils';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {DataService} from './service/DataService';\r\nimport {Toast} from 'primereact/toast';\r\nimport {Button} from 'primereact/button';\r\nimport {Toolbar} from 'primereact/toolbar';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport {InputNumber} from 'primereact/inputnumber';\r\nimport {Dialog} from 'primereact/dialog';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport './asset/css/data_table.css';\r\n\r\nconst DTK = () => {\r\n\r\n    let emptyStock = {\r\n        id: null,\r\n        code: '0000',\r\n        confidence: 0.2,\r\n        ratio: 0,\r\n        win: 1,\r\n        loss: 1,\r\n        asset_allocation: 0,\r\n        roi: 0,\r\n        asset_money: 0\r\n    };\r\n\r\n    const confidenceSelectItems = [\r\n        {label: '0%', value: 0},\r\n        {label: '20%', value: 0.2},\r\n        {label: '40%', value: 0.4},\r\n        {label: '60%', value: 0.6},\r\n        {label: '80%', value: 0.8},\r\n        {label: '100%', value: 1}\r\n    ];\r\n\r\n    const [stocks, setStocks] = useState([]);\r\n\r\n    const [inputMoney, setInputMoney] = useState(null);\r\n\r\n    const [stockDialog, setStockDialog] = useState(false);\r\n    const [deleteStockDialog, setDeleteStockDialog] = useState(false);\r\n    const [deleteStocksDialog, setDeleteStocksDialog] = useState(false);\r\n    const [stock, setStock] = useState(emptyStock);\r\n    const [selectedStocks, setSelectedStocks] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n    const toast = useRef(null);\r\n    const dt = useRef(null);\r\n    const stockService = new DataService();\r\n\r\n    useEffect(() => {\r\n        // stockService.getProducts().then(data => setStocks(data));\r\n        stockService.getStocks().then(data => setStocks(data));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const formatCurrency = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    const formatPercent = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'percent'});\r\n    }\r\n\r\n    const formatPercentWith2Fixed = (value) => {\r\n        return value.toLocaleString('en-US', {style: 'percent', minimumFractionDigits: 2});\r\n    }\r\n\r\n    const openNew = () => {\r\n        if (!inputMoney) {\r\n            toast.current.show({\r\n                severity: 'warn',\r\n                summary: 'Warning',\r\n                detail: 'The money value must be provided',\r\n                life: 3000\r\n            });\r\n        } else {\r\n            setStock(emptyStock);\r\n            // setSubmitted(true);\r\n            saveStock();\r\n\r\n            // setStockDialog(true);\r\n        }\r\n\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setStockDialog(false);\r\n    }\r\n\r\n    const hideDeleteStockDialog = () => {\r\n        setDeleteStockDialog(false);\r\n    }\r\n\r\n    const hideDeleteStocksDialog = () => {\r\n        setDeleteStocksDialog(false);\r\n    }\r\n\r\n    const saveStock = () => {\r\n        console.log(\"saveStock\", stock)\r\n        if (!stock.code) {\r\n            toast.current.show({\r\n                severity: 'warn',\r\n                summary: 'Warning',\r\n                detail: 'The stock code must be provided',\r\n                life: 3000\r\n            });\r\n        } else {\r\n\r\n            setSubmitted(true);\r\n\r\n            if (stock.code.trim()) {\r\n                let _stocks = [...stocks];\r\n                let _stock = {...stock};\r\n                if (stock.id) {\r\n                    const index = findIndexById(stock.id);\r\n                    console.log(\"findIndexById(stock.id)\", index);\r\n                    _stocks[index] = _stock;\r\n                    toast.current.show({\r\n                        severity: 'success',\r\n                        summary: 'Successful',\r\n                        detail: 'Stock Updated',\r\n                        life: 3000\r\n                    });\r\n                } else {\r\n                    _stock.id = createId();\r\n                    _stock.image = 'product-placeholder.svg';\r\n                    _stocks.push(_stock);\r\n                    toast.current.show({\r\n                        severity: 'success',\r\n                        summary: 'Successful',\r\n                        detail: 'Stock Created',\r\n                        life: 3000\r\n                    });\r\n                }\r\n\r\n                setStocks(_stocks);\r\n                setStockDialog(false);\r\n                setStock(emptyStock);\r\n            }\r\n        }\r\n    }\r\n\r\n    const editStock = (stock) => {\r\n        console.log(\"editStock\", stock)\r\n        if (inputMoney) {\r\n            setStock({...stock});\r\n            setStockDialog(true);\r\n        } else {\r\n            toast.current.show({\r\n                severity: 'warn',\r\n                summary: 'Warning',\r\n                detail: 'The money value must be provided',\r\n                life: 3000\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const confirmDeleteStock = (stock) => {\r\n        setStock(stock);\r\n        setDeleteStockDialog(true);\r\n    }\r\n\r\n    const deleteStock = () => {\r\n        let _stocks = stocks.filter(val => val.id !== stock.id);\r\n        setStocks(_stocks);\r\n        setDeleteStockDialog(false);\r\n        setStock(emptyStock);\r\n        toast.current.show({severity: 'success', summary: 'Successful', detail: 'Stock Deleted', life: 3000});\r\n    }\r\n\r\n    const findIndexById = (id) => {\r\n        let index = -1;\r\n        for (let i = 0; i < stocks.length; i++) {\r\n            if (stocks[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const createId = () => {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    const exportCSV = () => {\r\n        dt.current.exportCSV();\r\n    }\r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteStocksDialog(true);\r\n    }\r\n\r\n    const deleteSelectedStocks = () => {\r\n        let _stocks = stocks.filter(val => !selectedStocks.includes(val));\r\n        setStocks(_stocks);\r\n        setDeleteStocksDialog(false);\r\n        setSelectedStocks(null);\r\n        toast.current.show({severity: 'success', summary: 'Successful', detail: 'Stocks Deleted', life: 3000});\r\n    }\r\n\r\n    const kellyFormula = (obj) => {\r\n\r\n        let ratio = obj.confidence - ((1 - obj.confidence) / ((obj.win / obj.loss)));\r\n\r\n        if (ratio < 0) {\r\n            return 0;\r\n        } else {\r\n            return ratio;\r\n        }\r\n\r\n    }\r\n\r\n    function sumDataReduce(arr) {\r\n        return arr.reduce((a, b) => a + b);\r\n    }\r\n\r\n    const assetAllocationFormula = (aa_this, aa_list) => {\r\n        // console.log(aa_this,sumDataReduce(aa_list))\r\n        return aa_this / sumDataReduce(aa_list);\r\n    }\r\n\r\n    const roiFormula = (aa, c) => {\r\n\r\n        return aa * (1 + c);\r\n\r\n    }\r\n\r\n    const updateDataObject = (data,index) => {\r\n        let new_ratio = data['ratio'];\r\n        let new_confidence = data['confidence'];\r\n\r\n        console.log(\"舊的stock info\", {...stock})\r\n        console.log(\"index\", index)\r\n        console.log(\"新的建議比例\", data['ratio'])\r\n\r\n        let _stocks = [...stocks]; //要如何取到已先更新後的value?????\r\n        let stocks_length = _stocks.length;\r\n\r\n        //更新該obj的ratio\r\n        _stocks[index]['ratio'] = new_ratio;\r\n        _stocks[index]['confidence'] = new_confidence;\r\n\r\n        console.log(stocks_length)\r\n\r\n        // if (stocks_length > 0) {\r\n\r\n        let new_ratio_list = _stocks.map(i => i.ratio);\r\n        let asset_allocation_value = assetAllocationFormula(new_ratio, new_ratio_list);\r\n        let roi = roiFormula(asset_allocation_value, new_confidence);\r\n        //ROI(單個)\r\n        data['roi'] = roi;\r\n\r\n        //變動資產配置率(單個)\r\n        data['asset_allocation'] = asset_allocation_value;\r\n        //資產配置金額(單個)\r\n        data['asset_money'] = inputMoney * asset_allocation_value;\r\n\r\n\r\n        _stocks[index]['roi'] = roi;\r\n        _stocks[index]['asset_allocation'] = asset_allocation_value;\r\n        _stocks[index]['asset_money'] = inputMoney * asset_allocation_value;\r\n\r\n        console.log(\"全部建議比例\",);\r\n        console.log(\"資產配置率\", asset_allocation_value);\r\n        console.log(\"ROI\", roi);\r\n\r\n        // all_stocks = updateAllStock(_stocks, new_ratio_list, index);\r\n        updateAllStock(_stocks, new_ratio_list, index);\r\n\r\n\r\n        // }\r\n\r\n        console.log(\"更新後的單筆data\", data)\r\n        console.log(_stocks);\r\n        setStock(data); //通知react渲染單筆UI\r\n        // setStocks(all_stocks); //通知react渲染全部UI\r\n    }\r\n\r\n    const onConfidenceChange = (e) => {\r\n        let _stock = {...stock}; //原始的obj\r\n        // let all_stocks = null;\r\n        // console.log(\"_stock\",_stock)\r\n\r\n        let index = findIndexById(stock.id);\r\n\r\n        let new_confidence = e.value;\r\n        // console.log(typeof new_confidence)\r\n        _stock['confidence'] = new_confidence; //新的value\r\n\r\n        //變動建議比例\r\n        let new_ratio = kellyFormula({\r\n            confidence: new_confidence,\r\n            win: _stock['win'],\r\n            loss: _stock['loss']\r\n        });\r\n\r\n        _stock['ratio'] = new_ratio\r\n        setStock(_stock); //通知react渲染UI\r\n\r\n        // _stock = {...stock};\r\n\r\n        updateDataObject(_stock,index);\r\n\r\n    }\r\n\r\n    const updateAllStock = (stocks_obj, new_ratio_list, updated_index) => {\r\n\r\n        for (let i = 0; i < stocks_obj.length; i++) {\r\n\r\n            if (i === updated_index) continue;\r\n            let current_ration = stocks_obj[i].ratio;\r\n            let current_confidence = stocks_obj[i].confidence;\r\n\r\n            let asset_allocation_value = assetAllocationFormula(current_ration, new_ratio_list);\r\n            let roi = roiFormula(asset_allocation_value, current_confidence);\r\n\r\n            stocks_obj[i].asset_allocation_value = asset_allocation_value;\r\n            stocks_obj[i].roi = roi;\r\n            stocks_obj[i]['asset_money'] = inputMoney * asset_allocation_value;\r\n\r\n        }\r\n\r\n        return stocks_obj;\r\n        // setStocks(stocks_obj); //通知react渲染全部UI\r\n    }\r\n\r\n    const onInputChange = (e, name) => {\r\n        const val = (e.target && e.target.value) || '';\r\n        let _stock = {...stock};\r\n        _stock[`${name}`] = val;\r\n\r\n        setStock(_stock);\r\n    }\r\n\r\n    const onInputNumberChange = (e, name) => {\r\n        const val = e.value || 0;\r\n        let _stock = {...stock};\r\n        let index = findIndexById(stock.id);\r\n\r\n        _stock[`${name}`] = val;\r\n\r\n        _stock['ratio'] = kellyFormula({\r\n            confidence: _stock['confidence'],\r\n            win: _stock['win'],\r\n            loss: _stock['loss']\r\n        });\r\n\r\n        //ration,asset_,roi,input_money\r\n\r\n        setStock(_stock);\r\n\r\n        updateDataObject(_stock,index);\r\n    }\r\n\r\n    const leftToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button label=\"New\" icon=\"pi pi-plus\" className=\"p-button-success p-mr-2\" onClick={openNew}/>\r\n                <Button label=\"Delete\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={confirmDeleteSelected}\r\n                        disabled={!selectedStocks || !selectedStocks.length}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const rightToolbarTemplate = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {/*<FileUpload mode=\"basic\" name=\"demo[]\" auto url=\"https://primefaces.org/primereact/showcase/upload.php\"*/}\r\n                {/*            accept=\".csv\" chooseLabel=\"Import\" className=\"p-mr-2 p-d-inline-block\"*/}\r\n                {/*            onUpload={importCSV}/>*/}\r\n                <Button label=\"Export\" icon=\"pi pi-upload\" className=\"p-button-help\" onClick={exportCSV}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const assetAllocationBodyTemplate = (rowData) => {\r\n        return formatPercentWith2Fixed(rowData.asset_allocation);\r\n    }\r\n\r\n    const assetMoneyBodyTemplate = (rowData) => {\r\n        return formatCurrency(rowData.asset_money);\r\n    }\r\n\r\n    const confidenceBodyTemplate = (rowData) => {\r\n        return formatPercent(rowData.confidence);\r\n    }\r\n\r\n    const ratioBodyTemplate = (rowData) => {\r\n        return formatPercent(rowData.ratio);\r\n    }\r\n\r\n    const winBodyTemplate = (rowData) => {\r\n        return formatPercent(rowData.win / 100);\r\n    }\r\n\r\n    const lossBodyTemplate = (rowData) => {\r\n        return formatPercent(rowData.loss / 100);\r\n    }\r\n\r\n    const roiBodyTemplate = (rowData) => {\r\n        return formatPercentWith2Fixed(rowData.roi);\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\"\r\n                        onClick={() => editStock(rowData)}/>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\"\r\n                        onClick={() => confirmDeleteStock(rowData)}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            <h5 className=\"p-mx-0 p-my-1\">Manage Stocks</h5>\r\n            <span className=\"p-input-icon-left\">\r\n                {/*<i className=\"pi pi-dollar\"/>*/}\r\n                <InputNumber id=\"inputMoney\" placeholder=\"Input money...\" min={0} value={inputMoney}\r\n                             onValueChange={(e) => setInputMoney(e.value)}\r\n                    // onChange={()=>console.log(inputMoney)}\r\n                             mode=\"currency\" currency=\"USD\"\r\n                             locale=\"en-US\" required className={classNames({'p-invalid': !inputMoney})}/>\r\n                {!inputMoney && <small className=\"p-error\">Money is required.</small>}\r\n            </span>\r\n\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\"/>\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\"/>\r\n            </span>\r\n        </div>\r\n    );\r\n    const stockDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog}/>\r\n            <Button label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={saveStock}/>\r\n        </React.Fragment>\r\n    );\r\n    const deleteStockDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteStockDialog}/>\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteStock}/>\r\n        </React.Fragment>\r\n    );\r\n    const deleteStocksDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteStocksDialog}/>\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteSelectedStocks}/>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-crud-demo\">\r\n            <Toast ref={toast}/>\r\n\r\n            <div className=\"card\">\r\n                <Toolbar className=\"p-mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\r\n\r\n                <DataTable ref={dt} value={stocks} selection={selectedStocks}\r\n                           onSelectionChange={(e) => setSelectedStocks(e.value)}\r\n                           dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                           paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                           currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} stocks\"\r\n                           globalFilter={globalFilter} header={header} responsiveLayout=\"scroll\">\r\n                    <Column selectionMode=\"multiple\" headerStyle={{width: '3rem'}} exportable={false}></Column>\r\n                    <Column field=\"id\" header=\"ID\" sortable className=\"datatable-column\" hidden></Column>\r\n                    <Column field=\"code\" header=\"股票代號\" sortable className=\"datatable-column\"></Column>\r\n                    {/*<Column field=\"image\" header=\"Image\" body={imageBodyTemplate}></Column>*/}\r\n\r\n                    <Column field=\"confidence\" header=\"信心度\"\r\n                            sortable body={confidenceBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"ratio\" header=\"建議比例\" sortable body={ratioBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"win\" header=\"停利\" sortable body={winBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"loss\" header=\"停損\" sortable body={lossBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"asset_allocation\" header=\"資產配置率\" sortable body={assetAllocationBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"roi\" header=\"投報率\" sortable body={roiBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column field=\"asset_money\" header=\"建議配置金額\" sortable body={assetMoneyBodyTemplate}\r\n                            className=\"datatable-column\"></Column>\r\n\r\n                    <Column body={actionBodyTemplate} exportable={false} className=\"datatable-column\"></Column>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Dialog visible={stockDialog} header=\"Stock Details\" modal className={[\"p-fluid\", \"dialog-width\"]}\r\n                    footer={stockDialogFooter} onHide={hideDialog}>\r\n\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"code\">股票代號</label>\r\n                    <InputText id=\"code\" value={stock.code || ''} onChange={(e) => onInputChange(e, 'code')} required\r\n                               autoFocus className={classNames({'p-invalid': submitted && !stock.code})}/>\r\n                    {!stock.code && <small className=\"p-error\">Code is required</small>}\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"p-field\">\r\n                    <label htmlFor=\"confidence\">信心度(%)</label>\r\n                    <Dropdown value={stock.confidence} options={confidenceSelectItems} optionLabel='label'\r\n                              optionValue=\"value\"\r\n                              onChange={onConfidenceChange}\r\n                        // valueTemplate={confidenceBodyTemplate}\r\n                        // onChange={(e) => setConfidence(e.value)}\r\n                              placeholder=\"Select a confidence value\"/>\r\n                    {/*{!stock.confidence && <small className=\"p-error\">Confidence is required.</small>}*/}\r\n                </div>\r\n\r\n                <div className=\"p-formgrid p-grid\">\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"win\">停利(%)</label>\r\n                        <InputNumber id=\"win\" value={stock.win} min={1} max={100}\r\n                                     onValueChange={(e) => onInputNumberChange(e, 'win')} integeronly/>\r\n                        {!stock.win && <small className=\"p-error\">Lock in gain is must greater than 0</small>}\r\n\r\n                    </div>\r\n                    <div className=\"p-field p-col\">\r\n                        <label htmlFor=\"loss\">停損(%)</label>\r\n                        <InputNumber id=\"loss\" value={stock.loss} min={1} max={100}\r\n                                     onValueChange={(e) => onInputNumberChange(e, 'loss')} integeronly/>\r\n                        {!stock.loss && <small className=\"p-error\">Stop-loss point is must greater than 0</small>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteStockDialog} className=\"dialog-width\" header=\"Confirm\" modal\r\n                    footer={deleteStockDialogFooter} onHide={hideDeleteStockDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{fontSize: '2rem'}}/>\r\n                    {stock && <span>Are you sure you want to delete <b>{stock.code}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteStocksDialog} className=\"dialog-width\" header=\"Confirm\" modal\r\n                    footer={deleteStocksDialogFooter} onHide={hideDeleteStocksDialog}>\r\n                <div className=\"confirmation-content\">\r\n                    <i className=\"pi pi-exclamation-triangle p-mr-3\" style={{fontSize: '2rem'}}/>\r\n                    {stock && <span>Are you sure you want to delete the selected stocks?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DTK;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './asset/css/index.css';\r\nimport DTK from './data-table-kelly';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\nimport Container from '@mui/material/Container';\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <CssBaseline/>\r\n        <Container maxWidth=\"xl\">\r\n            <DTK/>\r\n        </Container>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}